//
// Copyright Â© 2016 Samsung CNCT
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
package iptables

import (
	"fmt"
	"os"
	"strings"
	"testing"
)

const (
	validSmallSaveBuf string = `# Generated by iptables-save v1.6.0 on Wed Dec 14 17:46:13 2016
*nat
:PREROUTING ACCEPT [258:12746]
:INPUT ACCEPT [225:10766]
:OUTPUT ACCEPT [7753:477832]
:POSTROUTING ACCEPT [7753:477832]
:DOCKER - [0:0]
:THIS-IS-A-TEST - [0:0]
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A DOCKER -i docker0 -j RETURN
COMMIT
# Completed on Wed Dec 14 17:46:13 2016
# Generated by iptables-save v1.6.0 on Wed Dec 14 17:46:13 2016
*filter
:INPUT ACCEPT [30317:23318290]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [27136:2316209]
:DOCKER - [0:0]
:DOCKER-ISOLATION - [0:0]
:sshguard - [0:0]
-A INPUT -j sshguard
-A FORWARD -j DOCKER-ISOLATION
-A FORWARD -o docker0 -j DOCKER
-A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -i docker0 ! -o docker0 -j ACCEPT
-A FORWARD -i docker0 -o docker0 -j ACCEPT
-A DOCKER-ISOLATION -j RETURN
-A sshguard -s 46.148.18.163/32 -j DROP
COMMIT
# Completed on Wed Dec 14 17:46:13 2016`
)

func strArrayToByteArrayArray(strArray []string) [][]byte {
	baa := make([][]byte, len(strArray))
	for i := range strArray {
		baa[i] = []byte(strArray[i])
	}
	return baa
}

func TestValidLargeSaveBuf(t *testing.T) {
	strBuf := strings.Split(validSmallSaveBuf, "\n")
	if index := ContainsRulePart(" -A POSTROUTING ! -d 10.0.0.0/8 ", strArrayToByteArrayArray(strBuf)); index >= 0 {
		fmt.Fprintf(os.Stdout, "Found valid substring")
	}
}
